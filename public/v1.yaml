openapi: 3.0.2
info:
  title: HIMTI UIN Jakarta Backend API
  description: |-
    This document details our API as it is right now. It is in no way a promise to never change it, any changes can be tracked on our github.

    Some useful links:
    - [Backend repository](https://github.com/Litbang-HIMTI/Backend-Website-Himti)
    - [Frontend repository](https://github.com/Litbang-HIMTI/Frontend-Website-Himti)
  contact:
    email: litbanghimtiuinjkt@gmail.com
  license:
    name: MIT
    url: https://github.com/Litbang-HIMTI/Backend-Website-Himti/blob/main/LICENSE
  version: "1.0"
externalDocs:
  description: Find out more about HIMTI UIN Jakarta
  url: https://himtiuinjkt.or.id/
servers:
  - url: /v1
    description: V1 API
tags:
  - name: Blog
  - name: Event
  - name: Forum
  - name: Comment
  - name: Shortlink
  - name: User
  - name: Group
  - name: Auth
paths:
  # -----------------------------------------------------------------------------------
  /blog:
    get:
      tags:
        - Blog
      summary: Get all blog posts
      description: Get all blog posts
      operationId: getAllBlogs
      parameters: []
      responses:
        "200":
          description: A successful response
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/blogList"
        "500":
          description: A server error
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/error_default"
      security: []
    post:
      tags:
        - Blog
      summary: Create a blog post
      description: Create a blog post
      operationId: createBlog
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/blogEditCreateRequest"
        description: Blog to create
      responses:
        "200":
          description: A successful response
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/blogCreateResponse"
        "400":
          description: A bad request
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/error_default"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/error_forbidden"
        "500":
          description: A server error
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/error_default"
      security:
        - BasicAuth: []
  /blog/{_id}:
    get:
      tags:
        - Blog
      summary: Get a blog post by ID
      description: Get a blog post by ID
      operationId: getBlogById
      parameters:
        - name: _id
          in: path
          description: ID of the blog post
          required: true
          schema:
            type: string
      responses:
        "200":
          description: A successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: "#/components/schemas/blog"
                  message:
                    type: string
                  success:
                    type: boolean
        "400":
          description: A bad request
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/error_default"
        "422":
          description: Validation error such as Id not found
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/error_notFound"
        "500":
          description: A server error
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/error_default"
      security: []
    put:
      tags:
        - Blog
      summary: Update a blog post
      description: Update a blog post
      operationId: updateBlog
      parameters:
        - in: path
          name: _id
          required: true
          schema:
            type: string
          description: Blog ID to update
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/blogEditCreateRequest"
        description: Blog to update
      responses:
        "200":
          description: A successful response
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/blogEditResponse"
        "400":
          description: A bad request
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/error_default"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/error_forbidden"
        "422":
          description: Validation error such as Id not found
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/error_notFound"
        "500":
          description: A server error
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/error_default"
      security:
        - BasicAuth: []
    delete:
      tags:
        - Blog
      summary: Delete a blog post
      description: Delete a blog post
      operationId: deleteBlog
      parameters:
        - name: _id
          in: path
          description: ID of the blog post
          required: true
          schema:
            type: string
      responses:
        "200":
          description: A successful response
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/blogDeleteResponse"
        "400":
          description: A bad request
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/error_default"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/error_forbidden"
        "422":
          description: Validation error such as Id not found
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/error_notFound"
        "500":
          description: A server error
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/error_default"
      security:
        - BasicAuth: []
  /blog/{_id}/revision:
    get:
      tags:
        - Blog
      summary: Get all revisions of a blog post
      description: Get all revisions of a blog post
      operationId: getBlogRevisions
      parameters:
        - name: _id
          in: path
          description: ID of the blog post
          required: true
          schema:
            type: string
      responses:
        "200":
          description: A successful response
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/blogRevisionList"
        "400":
          description: A bad request
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/error_default"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/error_forbidden"
        "500":
          description: A server error
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/error_default"
      security: []
  # -----------------------------------------------------------------------------------
  /blog/revision:
    get:
      tags:
        - Blog
      summary: Get all blog post revisions
      description: Get all blog post revisions
      operationId: getAllBlogRevisions
      parameters: []
      responses:
        "200":
          description: A successful response
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/blogRevisionList"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/error_forbidden"
        "500":
          description: A server error
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/error_default"
      security:
        - BasicAuth: []
  /blog/revision/{_id}:
    get:
      tags:
        - Blog
      summary: Get a blog post revision by its revision Id
      description: Get a blog post revision by its revision Id
      operationId: getBlogRevisionById
      parameters:
        - name: _id
          in: path
          description: Id of the blog post revision
          required: true
          schema:
            type: string
      responses:
        "200":
          description: A successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: "#/components/schemas/blogRevision"
                  message:
                    type: string
                  success:
                    type: boolean
        "400":
          description: A bad request
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/error_default"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/error_forbidden"
        "422":
          description: Validation error such as Id not found
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/error_notFound"
        "500":
          description: A server error
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/error_default"
      security:
        - BasicAuth: []
    put:
      tags:
        - Blog
      summary: Update a blog post revision
      description: Update a blog post revision
      operationId: updateBlogRevision
      parameters:
        - in: path
          name: _id
          required: true
          schema:
            type: string
          description: Blog post revision ID to update
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/blogEditCreateRequest"
        description: Blog post revision to update
      responses:
        "200":
          description: A successful response
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/blogRevisionEditResponse"
        "400":
          description: A bad request
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/error_default"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/error_forbidden"
        "422":
          description: Validation error such as Id not found
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/error_notFound"
        "500":
          description: A server error
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/error_default"
      security:
        - BasicAuth: []
    delete:
      tags:
        - Blog
      summary: Delete a blog post revision
      description: Delete a blog post revision
      operationId: deleteBlogRevision
      parameters:
        - name: _id
          in: path
          description: ID of the blog post revision
          required: true
          schema:
            type: string
      responses:
        "200":
          description: A successful response
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/blogRevisionDeleteResponse"
        "400":
          description: A bad request
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/error_default"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/error_forbidden"
        "422":
          description: Validation error such as Id not found
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/error_notFound"
        "500":
          description: A server error
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/error_default"
      security:
        - BasicAuth: []
  # -----------------------------------------------------------------------------------
  /event:
    get:
      tags:
        - Event
      summary: Get all events
      description: Get all events
      operationId: getAllEvents
      parameters: []
      responses:
        "200":
          description: A successful response
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/eventList"
        "500":
          description: A server error
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/error_default"
      security: []
    post:
      tags:
        - Event
      summary: Create a new event
      description: Create a new event
      operationId: createEvent
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/eventEditCreateRequest"
        description: Event to create
      responses:
        "200":
          description: A successful response
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/eventCreateResponse"
        "400":
          description: A bad request
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/error_default"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/error_forbidden"
        "500":
          description: A server error
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/error_default"
      security:
        - BasicAuth: []
  /event/{_id}:
    get:
      tags:
        - Event
      summary: Get an event by ID
      description: Get an event by ID
      operationId: getEventById
      parameters:
        - name: _id
          in: path
          description: ID of the event
          required: true
          schema:
            type: string
      responses:
        "200":
          description: A successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: "#/components/schemas/event"
                  message:
                    type: string
                  success:
                    type: boolean
        "400":
          description: A bad request
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/error_default"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/error_forbidden"
        "422":
          description: Validation error such as Id not found
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/error_notFound"
        "500":
          description: A server error
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/error_default"
      security: []
    put:
      tags:
        - Event
      summary: Update an event
      description: Update an event
      operationId: updateEvent
      parameters:
        - in: path
          name: _id
          required: true
          schema:
            type: string
          description: Event ID to update
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/eventEditCreateRequest"
        description: Event to update
      responses:
        "200":
          description: A successful response
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/eventEditResponse"
        "400":
          description: A bad request
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/error_default"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/error_forbidden"
        "422":
          description: Validation error such as Id not found
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/error_notFound"
        "500":
          description: A server error
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/error_default"
      security:
        - BasicAuth: []
    delete:
      tags:
        - Event
      summary: Delete an event
      description: Delete an event
      operationId: deleteEvent
      parameters:
        - name: _id
          in: path
          description: ID of the event
          required: true
          schema:
            type: string
      responses:
        "200":
          description: A successful response
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/eventDeleteResponse"
        "400":
          description: A bad request
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/error_default"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/error_forbidden"
        "422":
          description: Validation error such as Id not found
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/error_notFound"
        "500":
          description: A server error
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/error_default"
      security:
        - BasicAuth: []
  /event/{_id}/revision:
    get:
      tags:
        - Event
      summary: Get all revisions of an event by eventId
      description: Get all revisions of an event by eventId
      operationId: getEventRevisionsByEventId
      parameters:
        - name: _id
          in: path
          description: ID of the event
          required: true
          schema:
            type: string
      responses:
        "200":
          description: A successful response
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/eventRevisionList"
        "400":
          description: A bad request
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/error_default"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/error_forbidden"
        "422":
          description: Validation error such as Id not found
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/error_notFound"
        "500":
          description: A server error
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/error_default"
      security:
        - BasicAuth: []
  /event/revision:
    get:
      tags:
        - Event
      summary: Get all event revisions
      description: Get all event revisions
      operationId: getEventRevisions
      responses:
        "200":
          description: A successful response
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/eventRevisionList"
        "400":
          description: A bad request
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/error_default"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/error_forbidden"
        "422":
          description: Validation error such as Id not found
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/error_notFound"
        "500":
          description: A server error
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/error_default"
      security:
        - BasicAuth: []
  /event/revision/{_id}:
    get:
      tags:
        - Event
      summary: Get an event revision by its revision id
      description: Get an event revision by its revision id
      operationId: getEventRevisionByRevisionId
      parameters:
        - name: _id
          in: path
          description: ID of the event revision
          required: true
          schema:
            type: string
      responses:
        "200":
          description: A successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: "#/components/schemas/eventRevision"
                  message:
                    type: string
                  success:
                    type: boolean
        "400":
          description: A bad request
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/error_default"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/error_forbidden"
        "422":
          description: Validation error such as Id not found
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/error_notFound"
        "500":
          description: A server error
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/error_default"
      security:
        - BasicAuth: []
    put:
      tags:
        - Event
      summary: Update an event revision
      description: Update an event revision
      operationId: updateEventRevision
      parameters:
        - name: _id
          in: path
          description: ID of the event revision
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              $ref: "#/components/schemas/eventRevision"
      responses:
        "200":
          description: A successful response
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/eventRevision"
        "400":
          description: A bad request
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/error_default"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/error_forbidden"
        "422":
          description: Validation error such as Id not found
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/error_notFound"
        "500":
          description: A server error
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/error_default"
      security:
        - BasicAuth: []
    delete:
      tags:
        - Event
      summary: Delete an event revision
      description: Delete an event revision
      operationId: deleteEventRevision
      parameters:
        - name: _id
          in: path
          description: ID of the event revision
          required: true
          schema:
            type: string
      responses:
        "200":
          description: A successful response
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/eventRevision"
        "400":
          description: A bad request
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/error_default"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/error_forbidden"
        "422":
          description: Validation error such as Id not found
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/error_notFound"
        "500":
          description: A server error
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/error_default"
      security:
        - BasicAuth: []
# -----------------------------------------------------------------------------------
components:
  schemas:
    error_forbidden:
      type: object
      properties:
        message:
          type: object
          nullable: true
          default: null
        status:
          type: string
          description: Error message
          default: "{Details why the request was forbidden}"
        success:
          type: boolean
          default: false
    error_notFound:
      type: object
      properties:
        data:
          type: object
          nullable: true
          default: null
        message:
          type: string
          default: '{params}: "{value}" not found'
        success:
          type: boolean
          default: false
    error_default:
      type: object
      properties:
        data:
          type: object
          nullable: true
          default: null
        message:
          type: string
          default: "{err msg}. If you think that this is a bug, please submit an issue at https://github.com/Litbang-HIMTI/Backend-Website-Himti/issues"
        success:
          type: boolean
          default: false
    # -----------------------------------------------------------------------------------
    blog:
      type: object
      properties:
        _id:
          type: string
          uniqueItems: true
        author:
          type: string
          description: The id of the author of this event
        title:
          type: string
        visibility:
          type: string
          enum:
            - public
            - draft
            - private
        description:
          type: string
        content:
          type: string
        thumbnail:
          type: string
        tags:
          type: array
          items:
            type: string
        pinned:
          type: boolean
          description: Whether the post is pinned or not
        showAtHome:
          type: boolean
          description: Whether the blog post is shown at the home page or not
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    blogList:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/blog"
        length:
          type: integer
          description: The number of blogs in this list
        message:
          type: string
          description: A message to be displayed to the user
        success:
          type: boolean
          description: Whether the request was successful or not
    blogEditCreateRequest:
      type: object
      properties:
        title:
          type: string
        visibility:
          type: string
          enum:
            - public
            - draft
            - private
        description:
          type: string
        content:
          type: string
        thumbnail:
          type: string
        tags:
          type: array
          items:
            type: string
        pinned:
          type: boolean
        showAtHome:
          type: boolean
    blogEditResponse:
      type: object
      properties:
        data:
          type: object
          $ref: "#/components/schemas/blog"
        message:
          type: string
          description: A message to be displayed to the user
          default: "Successfully updated Blog and {successfully/fail} to moved old blog post to revision"
        success:
          type: boolean
          description: Whether the request was successful or not
    blogCreateResponse:
      type: object
      properties:
        data:
          type: object
          $ref: "#/components/schemas/blog"
        message:
          type: string
          description: A message to be displayed to the user
          default: "Blog created successfully"
        success:
          type: boolean
          description: Whether the request was successful or not
    blogDeleteResponse:
      type: object
      properties:
        data:
          type: object
          $ref: "#/components/schemas/blog"
        message:
          type: string
          description: A message to be displayed to the user
          default: "Successfully deleted blog post and {successfully/fail} to delete its revision history"
        success:
          type: boolean
          description: Whether the request was successful or not
    # -----------------------------------------------------------------------------------
    blogRevision:
      type: object
      properties:
        _id:
          type: string
        author:
          type: string
          description: The id of the author of this event
        title:
          type: string
        visibility:
          type: string
          enum:
            - public
            - draft
            - private
        description:
          type: string
        content:
          type: string
        thumbnail:
          type: string
        tags:
          type: array
          items:
            type: string
        pinned:
          type: boolean
          description: Whether the post is pinned or not
        showAtHome:
          type: boolean
          description: Whether the blog post is shown at the home page or not
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        revision:
          type: integer
          description: The revision number of this revision
        blogId:
          type: string
          description: The id of the blog post this revision is for
    blogRevisionList:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/blogRevision"
        length:
          type: integer
          description: The number of revisions for this blog post
        message:
          type: string
          description: A message to be displayed to the user
        success:
          type: boolean
          description: Whether the request was successful or not
    blogRevisionEditResponse:
      type: object
      properties:
        data:
          type: object
          $ref: "#/components/schemas/blogRevision"
        message:
          type: string
          description: A message to be displayed to the user
          default: "Successfully updated Blog revision"
        success:
          type: boolean
          description: Whether the request was successful or not
    blogRevisionDeleteResponse:
      type: object
      properties:
        data:
          type: object
          $ref: "#/components/schemas/blogRevision"
        message:
          type: string
          description: A message to be displayed to the user
          default: "Successfully deleted Blog revision"
        success:
          type: boolean
          description: Whether the request was successful or not
    # -----------------------------------------------------------------------------------
    event:
      type: object
      properties:
        _id:
          type: string
          uniqueItems: true
        author:
          type: string
          description: The id of the author of this event
        title:
          type: string
        visibility:
          type: string
          enum:
            - public
            - draft
            - private
        description:
          type: string
        content:
          type: string
        thumbnail:
          type: string
        tags:
          type: array
          items:
            type: string
        pinned:
          type: boolean
          description: Whether the post is pinned or not
        showAtHome:
          type: boolean
          description: Whether the blog post is shown at the home page or not
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    eventList:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/event"
        length:
          type: integer
          description: The amount of events in the list
        message:
          type: string
          description: A message to be displayed to the user
        success:
          type: boolean
          description: Whether the request was successful or not
    eventEditCreateRequest:
      type: object
      properties:
        title:
          type: string
        visibility:
          type: string
          enum:
            - public
            - draft
            - private
        description:
          type: string
        content:
          type: string
        thumbnail:
          type: string
        tags:
          type: array
          items:
            type: string
        pinned:
          type: boolean
        showAtHome:
          type: boolean
          description: Whether the blog post is shown at the home page or not
    eventEditResponse:
      type: object
      properties:
        data:
          type: object
          $ref: "#/components/schemas/event"
        message:
          type: string
          description: A message to be displayed to the user
          default: "Successfully updated Event and {successfully/fail} to moved old event to revision"
        success:
          type: boolean
          description: Whether the request was successful or not
    eventCreateResponse:
      type: object
      properties:
        data:
          type: object
          $ref: "#/components/schemas/event"
        message:
          type: string
          description: A message to be displayed to the user
          default: "Event created successfully"
        success:
          type: boolean
          description: Whether the request was successful or not
    eventDeleteResponse:
      type: object
      properties:
        data:
          type: object
          $ref: "#/components/schemas/event"
        message:
          type: string
          description: A message to be displayed to the user
          default: "Successfully deleted event and {successfully/fail} to delete its revision history"
        success:
          type: boolean
          description: Whether the request was successful or not
    # -----------------------------------------------------------------------------------
    eventRevision:
      type: object
      properties:
        _id:
          type: string
          uniqueItems: true
        author:
          type: string
          description: The id of the author of this event
        title:
          type: string
        visibility:
          type: string
          enum:
            - public
            - draft
            - private
        description:
          type: string
        content:
          type: string
        thumbnail:
          type: string
        tags:
          type: array
          items:
            type: string
        pinned:
          type: boolean
          description: Whether the post is pinned or not
        showAtHome:
          type: boolean
          description: Whether the blog post is shown at the home page or not
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        revision:
          type: integer
          description: The revision number of this revision
        eventId:
          type: string
          description: The id of the event this revision is for
    eventRevisionList:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/eventRevision"
        length:
          type: integer
          description: The amount of events revision in the list
        message:
          type: string
          description: A message to be displayed to the user
        success:
          type: boolean
          description: Whether the request was successful or not
    eventRevisionEditResponse:
      type: object
      properties:
        data:
          type: object
          $ref: "#/components/schemas/eventRevision"
        message:
          type: string
          description: A message to be displayed to the user
          default: "Successfully updated Event revision"
        success:
          type: boolean
          description: Whether the request was successful or not
    eventRevisionDeleteResponse:
      type: object
      properties:
        data:
          type: object
          $ref: "#/components/schemas/eventRevision"
        message:
          type: string
          description: A message to be displayed to the user
          default: "Successfully deleted Event revision"
        success:
          type: boolean
          description: Whether the request was successful or not
    # -----------------------------------------------------------------------------------

  securitySchemes:
    BasicAuth:
      type: http
      scheme: basic

security:
  - basicAuth: []
